# Token details
type Token @entity {
  # id = token address
  id: ID!
  name: String!
  symbol: String!
  decimals: BigDecimal!
  holders: [Holder!]! @derivedFrom(field: "token")
  balances: [TokenBalance!]! @derivedFrom(field: "token")
  totalSupplys:[TokenTotalSupply!]! @derivedFrom(field: "token")
  transfers:[TokenTransfer!]! @derivedFrom(field: "token")
  approvals:[TokenApproval!]! @derivedFrom(field: "token")
}

# # token balance details
type Holder @entity {
  id: ID!
  token: Token!
  address: String!
  balance: BigDecimal!
}

# # token balance details
type TokenBalance @entity {
  id: ID!
  token: Token!
  address: String!
  balance: BigDecimal!
  blockTimestamp: BigInt!
  blockNumber: BigInt!
}

type TokenTotalSupply @entity(immutable: true) {
  id: Bytes!
  token: Token!
  value: BigInt! 
  blockNumber: BigInt!
  blockTimestamp: BigInt!
}

type TokenTransfer @entity(immutable: true) {
  id: Bytes!
  token: Token!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenApproval @entity(immutable: true) {
  id: Bytes!
  token: Token!
  owner: Bytes! # address
  spender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}